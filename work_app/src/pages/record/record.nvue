<template>
	<tm-app color="grey-5">
		<tm-navbar title="成长记录" :shadow="0" hide-home :followTheme="true">
			<template v-slot:right>
				<view class="flex flex-center flex-row">
					<tm-icon _class="px-24" :font-size="32" name="tmicon-menu" @click="showWin = true"></tm-icon>
				</view>
			</template>
		</tm-navbar>

		<tm-card v-for="(student, index) in data_source.data" :key="index" :status="data_source.grade.name"
			:statusColor="store.tmStore.color" :title="student.name">
			<template v-slot:content>
				<tm-timeline>
					<tm-timeline-item :color="store.tmStore.color" :size="32" type="fill" icon="tmicon-check"
						:time="record.courseName" v-for="(record, index) in student.records.slice(0,3)" :key="index">
						<tm-button class="copy-btn" :margin="[10, 15]" size="mini" :shadow="0" label="复制"
							@click="copy(record)"></tm-button>
						<tm-sheet no-level :shadow="2" :round="3" :margin="[0, 0]">
							<tm-more :height="200">
								<tm-text :label="record.content"></tm-text>
							</tm-more>
						</tm-sheet>
					</tm-timeline-item>
				</tm-timeline>
			</template>
		</tm-card>
		<tm-drawer ref="gradeDrawer" placement="right" v-model:show="showWin">
			<template v-slot:default>
				<tm-sheet>
					<tm-text :font-size="24" _class="font-weight-b" label="我的班级"></tm-text>
					<tm-divider></tm-divider>
					<tm-radio-group model="button" v-model="select_grade">
						<tm-radio :border="0" :round="3" v-for="(grade, index) in grade_source.data" :key="index"
							:value="grade.id" :label="grade.name" :fontSize="30"
							@change="selectGrade(grade)"></tm-radio>
					</tm-radio-group>
				</tm-sheet>
			</template>
		</tm-drawer>
		<tm-result v-if="data_source.data.length <= 0" :showBtn="false" title="数据为空" subTitle="请选择班级"></tm-result>
		<tm-float-button position="br" :btn="{ icon: 'tmicon-tag',linear:'bottom',color:'green' }"
			@click="showWin = true"></tm-float-button>
	</tm-app>
</template>
<script lang="ts" setup>
	import {
		ref,
		reactive,
		nextTick,
		getCurrentInstance,
		onBeforeMount,
	} from "vue";
	import { useTmpiniaStore } from "@/tmui/tool/lib/tmpinia";
	import GradeTarget from "@/api/apis/grade";
	import { SpiAxios } from "@/service/spi/spi";
	import storage from "@/service/storage/storage";
	const store = useTmpiniaStore();
	const showWin = ref(false);
	const select_grade = ref(null);
	const copy = (record : any) => {
		uni.setClipboardData({
			data: record.content,
			success: function () {
				console.log("复制成功");
			},
		});
	};
	const selectGrade = (grade : any) => {
		getList(grade.id);
		showWin.value = false;
	};

	/** 学生数据 */
	const data_source = reactive({
		grade: {},
		data: [] as any,
	});
	const getList = (id : number) => {
		SpiAxios.create(GradeTarget.students({ id: id }))
			.http()
			.then((data) => {
				console.log(data);
				data_source.grade = data;
				data_source.data = data.students.map((s : any) => {
					let student = s
					student.record = s.records.map((r : any) => {
						let record = r
						record.content = r.content.replace(/<p>/g, '\n').replace(/<P>/g, '\n').replace(/<\/P>/g, '').replace(/<\/p>/g, '').replace(/&nbsp; &nbsp;/g, ' ')
						return record
					}).slice(0,2)
					return student
				});
			})
			.catch((err) => {
				console.log(err);
			});
	};
	/** 班级数据 */
	const grade_source = reactive({
		data: [] as any,
	});
	const getGradeList = () => {
		const user = storage.get("user");
		if (!user) {
			uni.redirectTo({
				url: "/pages/account/login",
			});
		}
		SpiAxios.create(GradeTarget.grades({ userid: user.id }))
			.http()
			.then((data) => {
				console.log(data);
				grade_source.data = data;
			})
			.catch((err) => {
				console.log(err);
			});
	};
	getGradeList();
</script>
<style language="less" scoped>
	.copy-btn {
		position: absolute;
		right: 0;
		top: -10px;
	}
</style>